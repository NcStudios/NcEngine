target_sources(${ENGINE_LIB} 
    PRIVATE
        ${ROOT_DIR}/source/graphics/Graphics.cpp
        ${ROOT_DIR}/source/graphics/Model.cpp
        ${ROOT_DIR}/source/graphics/d3dresource/GraphicsResource.cpp
        ${ROOT_DIR}/source/graphics/d3dresource/ShaderResources.cpp
        ${ROOT_DIR}/source/graphics/d3dresource/MeshResources.cpp
        ${ROOT_DIR}/source/graphics/d3dresource/ConstantBufferResources.cpp
        ${ROOT_DIR}/source/graphics/Mesh.cpp
        ${ROOT_DIR}/source/graphics/WICTextureLoader.cpp
        ${ROOT_DIR}/source/graphics/Material.cpp
        ${ROOT_DIR}/source/graphics/techniques/Technique.cpp
        ${ROOT_DIR}/source/graphics/techniques/PhongShadingTechnique.cpp
        ${ROOT_DIR}/source/graphics/techniques/WireframeTechnique.cpp
        ${ROOT_DIR}/source/graphics/techniques/TechniqueManager.cpp
        ${ROOT_DIR}/source/graphics/ResourceGroup.cpp
        ${ROOT_DIR}/source/graphics/rendergraph/FrameManager.cpp
        ${ROOT_DIR}/source/graphics/rendergraph/Job.cpp
        ${ROOT_DIR}/source/graphics/rendergraph/Pass.cpp
)

if(USE_VULKAN)
    target_sources(${ENGINE_LIB}
        PRIVATE
            ${ROOT_DIR}/source/graphics/Graphics2.cpp
            ${ROOT_DIR}/source/graphics/vulkan/Instance.cpp
            ${ROOT_DIR}/source/graphics/vulkan/Base.cpp
            ${ROOT_DIR}/source/graphics/vulkan/GraphicsPipeline.cpp
            ${ROOT_DIR}/source/graphics/vulkan/RenderPass.cpp
            ${ROOT_DIR}/source/graphics/vulkan/FrameBuffers.cpp
            ${ROOT_DIR}/source/graphics/vulkan/Commands.cpp
            ${ROOT_DIR}/source/graphics/vulkan/VertexBuffer.cpp
            ${ROOT_DIR}/source/graphics/vulkan/IndexBuffer.cpp
    )
endif()